{"version":3,"sources":["components/CityComponent.js","components/WeatherInfoComponent.js","App.js","index.js"],"names":["WeatherLogo","styled","img","ChooseCityLabel","span","SearchBox","form","CityComponent","props","updateCity","fetchWeather","src","onSubmit","placeholder","onChange","e","target","value","type","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","weatherIcons","WeatherCondition","div","Condition","Location","WeatherInfoLable","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","name","WeatherComponent","timeStamp","weather","isDay","icon","includes","Math","floor","main","temp","description","sys","country","Date","getHours","getMinutes","speed","Container","AppLable","App","useState","city","updateWeather","a","preventDefault","axios","get","response","data","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca7c73d4.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst WeatherLogo = styled.img`\r\n  width: 140px;\r\n  height: 140px;\r\n  margin: 40px auto;\r\n`;\r\nconst ChooseCityLabel = styled.span`\r\n  color: black;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin: 10px auto;\r\n`;\r\nconst SearchBox = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n  border: black solid 1px;\r\n  border-radius: 2px;\r\n  color: black;\r\n  margin: 20px auto;\r\n  & input {\r\n    padding: 10px;\r\n    font-size: 14px;\r\n    border: none;\r\n    outline: none;\r\n    font-weight: bold;\r\n  }\r\n\r\n  & button {\r\n    padding: 10px;\r\n    font-size: 14px;\r\n    color: white;\r\n    background-color: black;\r\n    border: none;\r\n    outline: none;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst CityComponent = (props) => {\r\n  const { updateCity , fetchWeather } = props;\r\n  return (\r\n    <>\r\n      <WeatherLogo src=\"/weatherapp/icons/perfect-day.svg\" />\r\n      <ChooseCityLabel>Find Weather of Your City</ChooseCityLabel>\r\n      <SearchBox onSubmit={fetchWeather}>\r\n        <input\r\n          placeholder=\"city\"\r\n          onChange={(e) => updateCity(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </SearchBox>\r\n    </>\r\n  );\r\n};\r\nexport default CityComponent;\r\n","import styled from \"styled-components\";\r\n\r\nconst WeatherInfoIcons = {\r\n  sunset: \"/weatherapp/icons/temp.svg\",\r\n  sunrise: \"/weatherapp/icons/temp.svg\",\r\n  humidity: \"/weatherapp/icons/humidity.svg\",\r\n  wind: \"/weatherapp/icons/wind.svg\",\r\n  pressure: \"/weatherapp/icons/pressure.svg\",\r\n};\r\n\r\nconst weatherIcons = {\r\n  \"01d\": \"/weatherapp/icons/sunny.svg\",\r\n  \"'01d'\": \"/weatherapp/icons/night.svg\",\r\n  \"02d\": \"/weatherapp/icons/day.svg\",\r\n  '\"02d\"': \"/weatherapp/icons/cloudy-night.svg\",\r\n  \"03d\": \"/weatherapp/icons/cloudy.svg\",\r\n  '\"03d\"': \"/weatherapp/icons/cloudy.svg\",\r\n  \"04d\": \"/weatherapp/icons/perfect-day.svg\",\r\n  '\"04d\"': \"/weatherapp/icons/cloudy-night.svg\",\r\n  \"09d\": \"/weatherapp/icons/rain.svg\",\r\n  '\"09d\"': \"/weatherapp/icons/rain-night.svg\",\r\n  \"10d\": \"/weatherapp/icons/rain.svg\",\r\n  '\"10d\"': \"/weatherapp/icons/rain-night.svg\",\r\n  \"11d\": \"/weatherapp/icons/storm.svg\",\r\n  '\"11d\"': \"/weatherapp/icons/storm.svg\",\r\n};\r\n\r\nconst WeatherCondition = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  width: 90%;\r\n  justify-content: space-between;\r\n  margin: 30px auto;\r\n`;\r\nconst Condition = styled.span`\r\n  margin: 20px auto;\r\n  font-size: 14px;\r\n  & span {\r\n    font-size: 28px;\r\n  }\r\n`;\r\nconst WeatherLogo = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: 5px auto;\r\n`;\r\nconst Location = styled.span`\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n`;\r\nconst WeatherInfoLable = styled.span`\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  margin: 20px 25px 10px;\r\n  text-align: start;\r\n  width: 90%;\r\n`;\r\nconst WeatherInfoContainer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  margin: 5px 10px;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\nconst InfoIcon = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n`;\r\nconst InfoLabel = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n  margin: 15px;\r\n  & span {\r\n    font-size: 12px;\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\nconst WeatherInfoComponent = (props) => {\r\n  const { name, value } = props;\r\n  return (\r\n    <InfoContainer>\r\n      <InfoIcon src={WeatherInfoIcons[name]} />\r\n      <InfoLabel>\r\n        {value}\r\n        <span>{name}</span>\r\n      </InfoLabel>\r\n    </InfoContainer>\r\n  );\r\n};\r\nconst WeatherComponent = (props) => {\r\n  const { weather } = props;\r\n  const isDay = weather?.weather[0].icon?.includes(\"d\");\r\n  const getTime = (timeStamp) => {\r\n    return `${new Date(timeStamp * 1000).getHours()} : ${new Date(\r\n      timeStamp * 1000\r\n    ).getMinutes()}`;\r\n  };\r\n  return (\r\n    <>\r\n      <WeatherCondition>\r\n        <Condition>\r\n          <span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>{\" \"}\r\n          {`| ${weather?.weather[0].description}`}\r\n        </Condition>\r\n        <WeatherLogo src={weatherIcons[weather?.weather[0].icon]} />\r\n      </WeatherCondition>\r\n      <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\r\n      <WeatherInfoLable>Weather Info</WeatherInfoLable>\r\n      <WeatherInfoContainer>\r\n        <WeatherInfoComponent\r\n          name={isDay ? \"sunset\" : \"sunrise\"}\r\n          value={getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}\r\n        />\r\n        <WeatherInfoComponent name=\"humidity\" value={weather?.main?.humidity} />\r\n        <WeatherInfoComponent name=\"wind\" value={weather?.wind?.speed} />\r\n        <WeatherInfoComponent name=\"pressure\" value={weather?.main?.pressure} />\r\n      </WeatherInfoContainer>\r\n    </>\r\n  );\r\n};\r\nexport default WeatherComponent;\r\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport CityComponent from \"./components/CityComponent\";\nimport WeatherComponent from \"./components/WeatherInfoComponent\";\n\nconst API_KEY = \"182a4a25434918d6df7d79ed90796e00\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  align-items: center;\n  box-shadow: 0 3px 6px 0 #555;\n  padding: 20px 10px;\n  border-radius: 4px;\n  width: 330px;\n  background: white;\n  font-family: Montserrat;\n  background: linear-gradient(papayawhip,rgb(233, 179, 92))\n`;\nconst AppLable = styled.span`\n  color: black;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`\n    );\n    updateWeather(response.data);\n    console.log(response);\n  };\n  return (\n    <Container>\n      <AppLable>Weather App By Sumit </AppLable>\n      {weather ? (\n        <WeatherComponent weather={weather}/>\n      ) : (\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}